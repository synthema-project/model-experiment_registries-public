apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: synthema-dev
type: Opaque
stringData:
  acces_key: Uah0Hra7U5QRqFydlF3f
  secret_key: ChQWXIVpsAxnFnD7oGBzknu1tYwrIH13nSBOoyM4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  namespace: synthema-dev
spec:
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      volumes:
        - name: mlflow-setup-volume
          emptyDir: {}
      initContainers:
        - name: init-mlflow
          image: ghcr.io/mlflow/mlflow:v2.10.0
          command: [ "sh", "-c" ]
          args:
            - |
              apt-get update && apt-get install -y gcc python3-dev && \
              pip install psycopg2-binary boto3 -t /mlflow-setup
          volumeMounts:
            - name: mlflow-setup-volume
              mountPath: /mlflow-setup
      containers:
        - name: mlflow
          image: ghcr.io/mlflow/mlflow:v2.10.0
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c" ]
          args:
            - |
              export PYTHONPATH=/mlflow-setup && \
              mlflow server --backend-store-uri ${BACKEND_STORE_URI} \
              --host 0.0.0.0 \
              --port 80 \
              --default-artifact-root ${ARTIFACTS_DESTINATION}/artifacts \
              --serve-artifacts
          volumeMounts:
            - name: mlflow-setup-volume
              mountPath: /mlflow-setup
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: admin-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: admin-secret
                  key: password
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: acces_key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: secret_key
            # - name: AWS_S3_BUCKET
            #   value: "mlflow"
            - name: MLFLOW_S3_BUCKET
              value: "mlflow"
            - name: MLFLOW_S3_ENDPOINT_URL
              value: "http://obstorage-minio.synthema-dev.svc.cluster.local:9000"
            - name: ARTIFACTS_DESTINATION
              value: "s3://mlflow/"

          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-dsb-svc
  namespace: synthema-dev
spec:
  type: ClusterIP
  selector:
    app: mlflow
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  name: mlflow-dsb-ingress-rule
  namespace: synthema-dev
spec:
  ingressClassName: nginx
  rules:
    - host: mlflow-dsb.k8s.synthema.rid-intrasoft.eu
      http:
        paths:
          - backend:
              service:
                name: mlflow-dsb-svc
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - mlflow-dsb.k8s.synthema.rid-intrasoft.eu
      secretName: secret-tls
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  namespace: synthema-dev
spec:
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      volumes:
        - name: mlflow-setup-volume
          emptyDir: {}
      initContainers:
        - name: init-mlflow
          image: ghcr.io/mlflow/mlflow:v2.10.0
          command: [ "sh", "-c" ]
          args:
            - |
              apt-get update && apt-get install -y gcc python3-dev && \
              pip install psycopg2-binary -t /mlflow-setup
          volumeMounts:
            - name: mlflow-setup-volume
              mountPath: /mlflow-setup
      containers:
        - name: mlflow
          image: ghcr.io/mlflow/mlflow:v2.10.0
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c" ]
          args:
            - |
              export PYTHONPATH=/mlflow-setup && \
              mlflow server --backend-store-uri ${BACKEND_STORE_URI} \
              --host 0.0.0.0 \
              --port 80 \
              --default-artifact-root ${ARTIFACTS_DESTINATION} \
              --serve-artifacts
          volumeMounts:
            - name: mlflow-setup-volume
              mountPath: /mlflow-setup
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: admin-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: admin-secret
                  key: password
#            - name: AWS_ACCESS_KEY_ID
#              valueFrom:
#                secretKeyRef:
#                  name: admin-secret
#                  key: username
#            - name: AWS_SECRET_ACCESS_KEY
#              valueFrom:
#                secretKeyRef:
#                  name: admin-secret
#                  key: password
            - name: MLFLOW_S3_ENDPOINT_URL
              value: "https://obstorageapi.k8s.synthema.rid-intrasoft.eu/"
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-svc
  namespace: synthema-dev
spec:
  type: NodePort
  selector:
    app: mlflow
  ports:
    - port: 80
      protocol: TCP
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     kubernetes.io/ingress.class: "nginx"
#     cert-manager.io/cluster-issuer: "letsencrypt-prod"
#   name: dummyrest-ingress-rule
#   namespace: synthema-dev
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: mlflow.k8s.synthema.rid-intrasoft.eu
#       http:
#         paths:
#           - backend:
#               service:
#                 name: dummyrest-service
#                 port:
#                   number: 8000
#             path: /
#             pathType: Prefix
#   tls:
#     - hosts:
#         - mlflow.k8s.synthema.rid-intrasoft.eu
#       secretName: secret-tls